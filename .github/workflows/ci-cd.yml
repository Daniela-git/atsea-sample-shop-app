name: ci with Docker

on:
  push:
    branches:
      - "master"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      #copy the repo
      - name: Check out the repo
        uses: actions/checkout@v2
      #login into the dockerhub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      #create and push the images
      - name: Build and push app
        uses: docker/build-push-action@v2
        with:
          context: ./app
          push: true
          tags: dhiguitaa/app_fp:latest, dhiguitaa/app_fp:${{ github.sha }}
      - name: Build and push database
        uses: docker/build-push-action@v2
        with:
          context: ./database
          push: true
          tags: dhiguitaa/database_fp:latest, dhiguitaa/database_fp:${{ github.sha }}
      - name: Build and push payment_gateway
        uses: docker/build-push-action@v2
        with:
          context: ./payment_gateway
          push: true
          tags: dhiguitaa/payment_gateway_fp:latest, dhiguitaa/payment_gateway_fp:${{ github.sha }}
      - name: Build and push reverse_proxy
        uses: docker/build-push-action@v2
        with:
          context: ./reverse_proxy
          push: true
          tags: dhiguitaa/reverse_proxy_fp:latest, dhiguitaa/reverse_proxy_fp:${{ github.sha }}
  #deploy the app
  aws:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      #add credentials aws
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      #start the ec2
      - name: start the instance
        run: |
          aws ec2 start-instances --instance-ids ${{ secrets.INSTANCE_ID }}

      - name: start  docker swarm
        run: |
          docker swarm init

      - name: docker
        run: |
          docker-compose up --build -d
      #test
      - name: Trigger end to end tests
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ secrets.USER_NAME }}/${{ secrets.REPO }}/dispatches \
          --header 'authorization: Bearer ${{ secrets.ACCESS_TOKEN }}' \
          --header 'Accept: application/vnd.github.v3+json' \
          --data '{
            "event_type": "deployed"
            }' \
          --fail
